cnn=Sequential()
cnn.add(Conv2D(32,(3,3),activation='relu',input_shape(28,28,1)))
cnn.add(Conv2D(32,(3,3),activation='relu'))
cnn.add(MaxPooling2D(pool_size=(2,2)))
cnn.add(Dropout(0.25))
cnn.add(Conv2D(64,(3,3),activation='relu'))
cnn.add(Conv2D(64,(3,3),activation='relu'))
cnn.add(MaxPooling2D(pool_size=(2,2)))
cnn.add(Dropout(0.25))
cnn.add(Flatten())
cnn.add(Dense(units=512, activation='relu'))
cnn.add(Dropout(0.5))
cnn.add(Dense(units=10,activation='softmax'))
cnn.compile(loss='categorical_crossentropy', optimizer=Adam(learning_rate=0.001), metrics=['acc'])
hist=cnn.fit(x_train, y_train, batch_size=128, epochs=100, validation_data=(x_test,y_test),verbose=2)

cnn.save('cnn_v2.h5')

res=cnn.evalute(x_test, y_test, verbose=0)
print('정확률=', res[1]*100)